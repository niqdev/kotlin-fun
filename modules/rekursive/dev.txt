goals
  - recursion schema in kotlin
  - markdown to json converter

# scala
https://github.com/niqdev/scala-fp/blob/master/docs/fp-ecosystem.md?plain=1#L166
https://github.com/niqdev/scala-fp/tree/master/modules/ecosystem/src/main/scala/com/github/niqdev/droste

https://www.47deg.com/blog/recursion-schemes-introduction

# scala.bythebay.io: Greg Pfeil, This programmer modeled his code after wooden nesting dolls
https://www.youtube.com/watch?v=lQdpXqD7Uic
# Going bananas with recursion schemes for fixed point data types - Pawel Szulc
https://www.youtube.com/watch?v=I-5yvVp74Vk
# Peeling the Banana: Recursion Schemes from First Principles - Zainab Ali
https://www.youtube.com/watch?v=XZ9nPZbaYfE
# Pure Functional Database Programming with Fixpoint Types—Rob Norris
https://www.youtube.com/watch?v=7xSfLPD6tiQ

# A Pragmatic Introduction to Category Theory—Daniela Sfregola
https://www.youtube.com/watch?v=Ss149MsZluI
https://github.com/DanielaSfregola/tutorial-cat

# A Crash Course in Category Theory - Bartosz Milewski
https://www.youtube.com/watch?v=JH_Ou17_zyU
# Category Theory for the Working Hacker by Philip Wadler
https://www.youtube.com/watch?v=V10hzjgoklA
# "Propositions as Types" by Philip Wadler
https://www.youtube.com/watch?v=IOiZatlZtGU
# "A Little Taste of Dependent Types" by David Christiansen
https://www.youtube.com/watch?v=VxINoKFm-S4

category are objects and arrow
morphism -> arrow -> composition -> functions
types -> set of values -> object
endofunctor: mapping/arrow inside the same category: mapping between set (same types) i.e. int to list[int], type constructor F[_]
functor: mapping between arrows

Adjunction of functor: an object that represents "type of function", the actual mapping between [A => B] : currying
